name: Python Release

on:
  push:
    branches: [use-cibuildwheel]

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.build_env.os }}
    runs-on: ${{ matrix.build_env.os }}
    strategy:
      matrix:
        build_env: [{os: ubuntu-18.04, arch: x64}, {os: windows-latest, arch: x64}, {os: windows-latest, arch: x86}, {os: macos-latest, arch: x64}]
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
        if: matrix.build_env.arch != 'x86'
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
        if: matrix.build_env.arch == 'x86'
      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: '3.7'
      - name: Install cibuildwheel
        run: |
          python -m pip install cibuildwheel==1.5.5
      - name: Build wheels
        run: |
          python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_BEFORE_ALL_LINUX: "curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain nightly -y"
          CIBW_BEFORE_BUILD: "pip install -U setuptools-rust"
          CIBW_SKIP: "cp27-* cp34-* pp* *win32"
          CIBW_MANYLINUX_X86_64_IMAGE: "manylinux2010"
          CIBW_MANYLINUX_I686_IMAGE: "manylinux2010"
          CIBW_TEST_COMMAND: "python3 -m pytest {project}/tests-py"
          CIBW_TEST_REQUIRES: "pytest flask hypothesis pytest-benchmark"
          CIBW_ENVIRONMENT_MACOS: "MACOSX_DEPLOYMENT_TARGET=10.9"
        if: matrix.build_env.arch != 'x86'
      - name: Build wheels
        run: |
          python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_BEFORE_BUILD: "pip install -U setuptools-rust"
          CIBW_SKIP: "cp27-* cp34-* pp* *amd64"
          CIBW_MANYLINUX_X86_64_IMAGE: "manylinux2010"
          CIBW_MANYLINUX_I686_IMAGE: "manylinux2010"
          CIBW_TEST_COMMAND: "python3 -m pytest {project}/tests-py"
          CIBW_TEST_REQUIRES: "pytest flask hypothesis pytest-benchmark"
        if: matrix.build_env.arch == 'x86'
      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl
  create_source_dist:
    name: Create sdist package
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
      - name: Install Tox
        run: pip install tox
      - name: Build sdist
        working-directory: ./python
        run: tox -e build-sdist
      - uses: actions/upload-artifact@v2
        with:
          name: Distribution Artifacts
          path: python/dist/

#  upload_to_pypi:
#    needs:
#    - build_wheels
#    - create_source_dist
#    name: Upload Artifacts to PyPi
#    runs-on: ubuntu-latest
#    steps:
#    - uses: actions/download-artifact@v2
#      with:
#        name: Distribution Artifacts
#        path: python/dist/
#    - name: Publish distribution package to PyPI
#      uses: pypa/gh-action-pypi-publish@v1.2.2
#      with:
#        user: ${{ secrets.PYPI_USERNAME }}
#        password: ${{ secrets.PYPI_PASSWORD }}
#        packages_dir: python/dist/
